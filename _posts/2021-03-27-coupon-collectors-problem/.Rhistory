import pymc3 as pm
import numpy as np
import arviz as az
obs = np.array([3, 21, 30, 87, 115])
with pm.Model() as model:
N = pm.DiscreteUniform("N", lower=obs.max(), upper=1000)
y = pm.DiscreteUniform("y", lower=0, upper=N, observed=obs)
trace = pm.sample(10000, return_inferencedata=True)
trace
reticulate::repl_python()
from random import random, randint
reticulate::repl_python()
library(distill)
render_site()
library(rmarkdown)
render_site()
render_site()
distill_website()
distill_article()
render_site()
render_site()
render_site()
render_site()
reticulate::repl_python()
create_postcard(file = "me.Rmd")
library(postcards)
create_postcard(file = "me.Rmd")
create_postcard(file = "me.Rmd")
update.packages("distill")
devtools::install_github("rstudio/distill")
update.packages("rmarkdown")
devtools::install_github("rstudio/distill")
install.packages("distill")
install.packages("distill")
install.packages("distill")
install.packages("distill")
install.packages("distill")
install.packages("distill")
package_version(distill)
package_version("distill")
packageVersion("distll")
packageVersion("distill")
install.packages(c("distill", "rmarkdown", "postcards"))
install.packages(c("distill", "rmarkdown", "postcards"))
install.packages(c("distill", "rmarkdown", "postcards"))
packageVersion("distill")
packageVersion("rmarkdown")
packageVersion("postcards")
update.packages("rmarkdown")
packageVersion("distill")
packageVersion("rmarkdown")
packageVersion("postcards")
detach(package:rmarkdown, unload = TRUE)
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("distill")
install.packages("distill")
create_theme("postcards")
library(distill)
create_theme("postcards")
library(distill)
create_post("On Importance Sampling", draft = TRUE)
library(distill)
create_post("On Basics of Markov Chain Simulation", draft = T)
library(distill)
create_post("On Conjugate Prior", draft = TRUE)
knitr::opts_chunk$set(echo = FALSE)
ponds <- c(1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0)
mean(ponds)
ponds <- c(1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0,
1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0)
mean(ponds)
ponds <- c(1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0,
1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0)
mean(ponds)
library(distill)
create_post("On Markov Chain Monte Carlo", draft = TRUE)
knitr::opts_chunk$set(echo = FALSE)
reticulate::repl_python()
import os
reticulate::repl_python()
reticulate::repl_python()
